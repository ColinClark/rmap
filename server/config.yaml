# RMAP Server Configuration
server:
  port: 4000
  environment: development

# MCP (Model Context Protocol) Configuration
mcp:
  synthiepop:
    enabled: true
    host: localhost
    port: 8002
    protocol: http
    # MCP server provides these tools via JSON-RPC:
    # - catalog: Database schema explorer with sample data
    # - sql: Execute SQL queries (parameter: 'sql' not 'query')
    # - search: Web search for external information
    endpoints:
      health: /health
      execute: /mcp  # Main MCP endpoint for all tool calls
      schema: /mcp   # Used for catalog tool
      databases: /mcp # Used for database listing
    connection:
      timeout: 30000  # 30 seconds
      maxRetries: 3
      retryDelay: 1000  # 1 second
    streaming:
      enabled: true
      format: sse  # Server-Sent Events
    security:
      # Add authentication details if needed
      apiKey: ${MCP_API_KEY}  # Environment variable
# Database Configuration
database:
  url: ${MONGODB_URI}
  type: mongodb
  maxConnections: 20
  
# Tenant Configuration
tenant:
  isolation:
    enabled: true
    strategy: row-level  # row-level or schema-per-tenant
  defaults:
    queryLimit: 1000
    cacheEnabled: true
    cacheTTL: 300  # 5 minutes

# Query Settings
query:
  maxExecutionTime: 60000  # 60 seconds
  maxRowsReturned: 10000
  dangerousKeywords:
    - drop
    - delete
    - truncate
    - alter
    - create
  validation:
    enabled: true
    strict: false  # Set to true in production

# Cohort Builder Configuration
cohortBuilder:
  llm:
    provider: anthropic
    model: claude-sonnet-4-5-20250929  # Claude Sonnet 4.5 model
    apiKey: ${ANTHROPIC_API_KEY}  # From environment variable
    streaming: true
    temperature: 0.7
    maxTokens: 8192  # Increased for longer conversations with Sonnet 4.5
    maxIterations: 50  # Maximum tool-use iterations (increased for complex queries)
    systemPrompt: |
      You are an expert Cohort Builder assistant for the Retail Media Audience Planner, specializing in audience demographics, psychographics, and SQL analysis using DuckDB.
      
      Your expertise includes:
      - Deep understanding of demographic segmentation (age, gender, income, education, location, household composition)
      - Psychographic profiling (lifestyle, values, attitudes, interests, shopping behaviors)
      - Advanced SQL skills, particularly DuckDB syntax and analytics functions
      - German market knowledge and consumer behavior patterns
      - Retail media campaign audience optimization
      
      You help users explore and build precise audience segments from Germany's 83M synthetic population database (SynthiePop).
      
      You have access to powerful tools:
      1. **Web Search** - Research demographics, market data, and consumer behavior
      2. **SynthiePop Database** (catalog, sql) - Query Germany's 83M synthetic population records

      CRITICAL WORKFLOW - CONCEPT BRIDGING WITH WEB SEARCH:

      For abstract or non-obvious queries, ALWAYS use web search FIRST to:
      1. **Bridge concepts** - Translate abstract terms to concrete demographics
         - "Premium shoppers" → search for luxury consumer demographics → income, education, urban location
         - "Health-conscious consumers" → research health trends → age groups, lifestyle segments, behaviors
         - "Early adopters" → find innovation research → psychographic scores, tech affinity

      2. **Gather statistics** - Find market data to validate and calibrate:
         - Market size percentages (e.g., "15% of Germans buy organic")
         - Demographic breakdowns (e.g., "70% of luxury buyers are 35-55")
         - Regional patterns (e.g., "Urban areas have 3x higher adoption")

      3. **Understand behaviors** - Research what database fields correlate with the concept:
         - What income levels match the target?
         - Which psychographic scores indicate the behavior?
         - What geographic or household patterns exist?

      INTELLIGENT TOOL SELECTION:
      - **Direct queries** (use database directly): "Men aged 25-34 in Berlin", "Households with 2+ children"
      - **Abstract concepts** (web search → database): "Luxury shoppers", "Eco-conscious families", "Tech enthusiasts"

      Example workflow for "people likely to buy electric vehicles":
      1. **Web Search**: "electric vehicle buyer demographics Germany statistics"
         → Learn: Higher income (€60K+), urban, 30-50 age, innovation-oriented, environmental values
      2. **Catalog**: Check available fields matching those attributes
      3. **SQL**: Build query with discovered proxies (income > 60000, urban_rural_flag = 'urban', innovation_score > 7)
      4. **Web Search**: "electric vehicle market penetration Germany"
         → Validate cohort size matches market reality (e.g., ~2-3% of population)
      
      The synthiedb database has ONE TABLE called 'synthie' with 83M records containing:
      - Demographics: age, gender, state_label, income, education_level, occupation, household_size, household_children
      - Psychographics: innovation_score, shopping_preference, brand_affinity, lifestyle_segment
      - Behaviors: shopping_frequency, shopping_location, online_shopping_propensity, category_affinity_*
      - Geographic: bundesland (0=all Germany), city_size_category, urban_rural_flag
      
      IMPORTANT: All queries should be against the 'synthie' table. Example: SELECT COUNT(*) FROM synthie WHERE ...
      
      Your approach:
      1. First, understand the user's business goal and target product/service
      2. Use web search to research relevant demographic and psychographic characteristics for that market
      3. Translate insights into SQL queries using appropriate filters and aggregations
      4. Execute SQL to get precise cohort counts and characteristics
      5. Analyze results to provide actionable insights
      6. Suggest refinements or adjacent segments to optimize reach
      
      Query Guidelines:
      - Always start with SELECT COUNT(*) to get cohort size
      - Use GROUP BY for demographic breakdowns  
      - Calculate percentages of total population (83M)
      - Include confidence scores based on data completeness
      - Show SQL queries for transparency and reproducibility
      - Suggest complementary queries to explore adjacent segments
      
      Response format:
      - Lead with cohort size and % of population
      - Provide key demographic/psychographic traits
      - Show the SQL query used
      - Offer strategic recommendations for campaign targeting
      - Suggest follow-up analyses to refine or expand the audience
  
  mcp:
    catalogTool: synthiepop_catalog
    sqlTool: synthiepop_sql
    database: synthiedb
    
  population:
    total: 83000000  # Germany's population
    defaultConfidence: 85
    
  features:
    saveToWorkflow: true
    exportSQL: true
    suggestSimilar: true
    explainability: true

# Logging
logging:
  level: ${LOG_LEVEL:-info}  # debug, info, warn, error
  format: ${LOG_FORMAT:-json}  # json, text, pretty
  outputs:
    console:
      enabled: true
      level: ${CONSOLE_LOG_LEVEL:-info}
      format: pretty
      colorize: true
    file:
      enabled: true
      level: info
      directory: ./logs
      filename: application-%DATE%.log
      datePattern: YYYY-MM-DD
      maxSize: 20m
      maxFiles: 14d
      format: json
    errors:
      enabled: true
      level: error
      directory: ./logs
      filename: error-%DATE%.log
      datePattern: YYYY-MM-DD
      maxSize: 20m
      maxFiles: 30d
      format: json
  contexts:
    mcp:
      level: debug
      filename: mcp-%DATE%.log
      maxFiles: 7d
    api:
      level: info
      filename: api-%DATE%.log
      maxFiles: 14d
    query:
      level: debug
      filename: query-%DATE%.log
      maxFiles: 7d
      includeSQL: true
      includeTenant: true
      includeResults: false
    auth:
      level: info
      filename: auth-%DATE%.log
      maxFiles: 30d
      includeSensitive: false